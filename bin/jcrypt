#!/usr/bin/env node

(() => {
    'use strict';

    let jcrypt = require('../lib/util'),
        argv = require('yargs')
            .usage('Usage: jcrypt [options]')
            .example('jcrypt -e c.txt --armor', 'Encrypt the file in-place.')
            .example('jcrypt -d c.asc -o c.txt --stream', 'Use the stream API to decrypt c.asc')

            .boolean('armor')
            .describe('armor', 'Output the enciphered data as ASCII.')

            .alias('d', 'decrypt')
            .describe('d', 'Perform decryption.')

            .alias('e', 'encrypt')
            .describe('e', 'Perform encryption.')

            .alias('o', 'output')
            .describe('o', 'The output file.')

            .alias('r', 'recipients')
            .describe('r', 'The intended person(s).')

            .alias('s', 'sign')
            .boolean('sign')
            .describe('s', 'Digitally sign as well as encipher.')

            .boolean('stream')
            .describe('stream', 'Use streams.')

            .help('h')
            .alias('h', 'help')
            .argv,

        callback = (type, err, data) => {
            console.log(!err ?
                ('Created ' + type + ' file ' + data) :
                '[ERROR] No such file'
            );
        },
        filename;

    function doOperation(type, args) {
        // '--decrypt' or '--encrypt'
        let fn = !argv.stream ? jcrypt : jcrypt.stream;

        fn.call(jcrypt, filename, argv.output, [`--${type}`].concat(args || []))
            .then(console.log)
            .catch((err) => {
                console.log(err);
                process.exit();
            });
    }

    if ((filename = argv.decrypt) !== undefined) {
        doOperation('decrypt');
    } else if ((filename = argv.encrypt) !== undefined) {
        let args = [];

        /*
        if (argv.armor) {
            args.push('--armor');
        }
        */

        // For now, default to always armor.
        args.push('--armor');

        if (argv.recipients) {
            args.push('-r', argv.recipients);
        } else {
            // Have it default to me for now.
            args.push('-r', 'benjam72@yahoo.com');
        }

        if (argv.sign) {
            args.push('--sign');
        }

        doOperation('encrypt', args);
    }
}());

